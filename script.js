const examSteps = [
    {
        title: "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏ï‡∏£‡∏ß‡∏à‡∏î‡∏π‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏à‡∏Å",
        icon: "üëÄ",
        instruction: "‡∏¢‡∏∑‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏à‡∏Å ‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡∏£‡∏π‡∏õ‡∏£‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡πÄ‡∏ï‡πâ‡∏≤‡∏ô‡∏°",
        motionClass: "hand-animation",
        checks: [
            "‡πÄ‡∏ï‡πâ‡∏≤‡∏ô‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏£‡πà‡∏≤‡∏á‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô",
            "‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡πÄ‡∏ï‡πâ‡∏≤‡∏ô‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á",
            "‡∏´‡∏±‡∏ß‡∏ô‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÑ‡∏°‡πà‡∏ö‡∏∏‡πã‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ"
        ]
    },
    {
        title: "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ï‡∏£‡∏ß‡∏à‡∏î‡∏π‡∏ó‡πà‡∏≤‡∏¢‡∏Å‡πÅ‡∏Ç‡∏ô",
        icon: "üôã‚Äç‚ôÄÔ∏è",
        instruction: "‡∏¢‡∏Å‡πÅ‡∏Ç‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏®‡∏µ‡∏£‡∏©‡∏∞ ‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡πÄ‡∏ï‡πâ‡∏≤‡∏ô‡∏°",
        motionClass: "hand-raise",
        checks: [
            "‡πÄ‡∏ï‡πâ‡∏≤‡∏ô‡∏°‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÅ‡∏Ç‡∏ô",
            "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥"
        ]
    },
    {
        title: "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏•‡∏≥‡∏ó‡πà‡∏≤‡∏ô‡∏≠‡∏ô",
        icon: "ü§≤",
        instruction: "‡∏ô‡∏≠‡∏ô‡∏£‡∏≤‡∏ö ‡∏Ñ‡∏•‡∏≥‡πÄ‡∏ï‡πâ‡∏≤‡∏ô‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏°",
        motionClass: "hand-palpate",
        checks: [
            "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡πâ‡∏≠‡∏ô‡πÅ‡∏Ç‡πá‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡πâ‡∏≠‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥",
            "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏¢‡∏∑‡πà‡∏≠"
        ]
    },
    {
        title: "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏ï‡∏£‡∏ß‡∏à‡∏´‡∏±‡∏ß‡∏ô‡∏°",
        icon: "üîç",
        instruction: "‡∏ö‡∏µ‡∏ö‡∏´‡∏±‡∏ß‡∏ô‡∏°‡πÄ‡∏ö‡∏≤‡πÜ ‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡∏Ç‡∏≠‡∏á‡πÄ‡∏´‡∏•‡∏ß‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥",
        motionClass: "hand-nipple",
        checks: [
            "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡∏≠‡∏á‡πÄ‡∏´‡∏•‡∏ß‡πÉ‡∏™ ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡∏±‡∏ß‡∏ô‡∏°",
            "‡∏´‡∏±‡∏ß‡∏ô‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏à‡πá‡∏ö ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏ö ‡πÑ‡∏°‡πà‡∏Ñ‡∏±‡∏ô"
        ]
    }
];

let currentStep = 0;
let answers = {};

function startExam() {
    document.getElementById('welcome-screen').classList.remove('active');
    document.getElementById('exam-screen').classList.add('active');
    document.getElementById('total-steps').textContent = examSteps.length;
    answers = {};
    showStep(0);
}

function showStep(stepIndex) {
    currentStep = stepIndex;
    const step = examSteps[stepIndex];
    document.getElementById('progress').style.width = ((stepIndex+1)/examSteps.length)*100 + "%";
    document.getElementById('current-step').textContent = stepIndex+1;
    document.getElementById('step-icon').textContent = step.icon;
    document.getElementById('step-title').textContent = step.title;

    // Motion graphic
    showMotionDemo(stepIndex);

    // Checklist
    const checklist = document.getElementById('checklist');
    checklist.innerHTML = '';
    step.checks.forEach((text, idx) => {
        const answer = answers[`${stepIndex}-${idx}`];
        const item = document.createElement('div');
        item.className = 'check-item' + (answer ? ' animate' : '');
        if (answer === 'yes') item.classList.add('answered-yes');
        if (answer === 'no') item.classList.add('answered-no');
        item.innerHTML = `
            <div class="check-question">${text}</div>
            <div class="choice-buttons">
                <button class="choice-btn yes${answer === 'yes' ? ' selected' : ''}" onclick="selectChoice(${stepIndex},${idx},'yes')">‡πÉ‡∏ä‡πà</button>
                <button class="choice-btn no${answer === 'no' ? ' selected' : ''}" onclick="selectChoice(${stepIndex},${idx},'no')">‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà</button>
            </div>
        `;
        checklist.appendChild(item);
        setTimeout(() => item.classList.add('animate'), 100 + idx*120);
    });

    // Buttons
    document.getElementById('prev-btn').disabled = stepIndex === 0;
    document.getElementById('next-btn').textContent = stepIndex === examSteps.length-1 ? '‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå' : '‡∏ñ‡∏±‡∏î‡πÑ‡∏õ';
}

function showMotionDemo(stepIndex) {
    const step = examSteps[stepIndex];
    const motion = `
    <div class="motion-demo">
      <div class="mirror-frame">
        <div class="body-silhouette">
          <div class="breast-area breast-left"></div>
          <div class="breast-area breast-right"></div>
          <div class="${step.motionClass}"></div>
        </div>
      </div>
      <div class="instruction-text">${step.instruction}</div>
    </div>
    `;
    document.getElementById('motion-example').innerHTML = motion;
}

function selectChoice(stepIdx, checkIdx, val) {
    answers[`${stepIdx}-${checkIdx}`] = val;
    showStep(stepIdx);
}

function nextStep() {
    if (currentStep < examSteps.length-1) {
        showStep(currentStep+1);
    } else {
        showResult();
    }
}

function prevStep() {
    if (currentStep > 0) showStep(currentStep-1);
}

function showResult() {
    document.getElementById('exam-screen').classList.remove('active');
    document.getElementById('result-screen').classList.add('active');
    const resultContent = document.getElementById('result-content');
    let risk = 0;
    Object.keys(answers).forEach(k=>{
        if(answers[k]==='no') risk++;
    });
    if (risk === 0) {
        resultContent.innerHTML = `<div class="result-box safe">
            <h3>‚úÖ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏õ‡∏Å‡∏ï‡∏¥</h3>
            <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡πà‡∏ß‡∏á</p>
            <p>‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏ï‡πâ‡∏≤‡∏ô‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</p>
        </div>`;
    } else if (risk <= 2) {
        resultContent.innerHTML = `<div class="result-box warning">
            <h3>‚ö†Ô∏è ‡πÇ‡∏õ‡∏£‡∏î‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡∏≠‡∏≤‡∏Å‡∏≤‡∏£</h3>
            <p>‡∏û‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô (${risk} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)</p>
            <p>‡∏´‡∏≤‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏Ñ‡∏ß‡∏£‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå</p>
        </div>`;
    } else {
        resultContent.innerHTML = `<div class="result-box risk">
            <h3>üö® ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á</h3>
            <p>‡∏û‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥‡∏´‡∏•‡∏≤‡∏¢‡∏à‡∏∏‡∏î (${risk} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)</p>
            <p>‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</p>
        </div>`;
    }
}

function restartExam() {
    document.getElementById('result-screen').classList.remove('active');
    document.getElementById('welcome-screen').classList.add('active');
}
